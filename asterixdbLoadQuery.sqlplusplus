drop dataverse tpcds if exists;
create dataverse tpcds;

use tpcds;

create type tpcds.catalog_sales_type as closed {
    cs_sold_date_sk:           bigint?,
    cs_sold_time_sk:           bigint?,
    cs_ship_date_sk:           bigint?,
    cs_bill_customer_sk:       bigint?,
    cs_bill_cdemo_sk:          bigint?,
    cs_bill_hdemo_sk:          bigint?,
    cs_bill_addr_sk:           bigint?,
    cs_ship_customer_sk:       bigint?,
    cs_ship_cdemo_sk:          bigint?,
    cs_ship_hdemo_sk:          bigint?,
    cs_ship_addr_sk:           bigint?,
    cs_call_center_sk:         bigint?,
    cs_catalog_page_sk:        bigint?,
    cs_ship_mode_sk:           bigint?,
    cs_warehouse_sk:           bigint?,
    cs_item_sk:                bigint,
    cs_promo_sk:               bigint?,
    cs_order_number:           bigint,
    cs_quantity:               bigint?,
    cs_wholesale_cost:         double?,
    cs_list_price:             double?,
    cs_sales_price:            double?,
    cs_ext_discount_amt:       double?,
    cs_ext_sales_price:        double?,
    cs_ext_wholesale_cost:     double?,
    cs_ext_list_price:         double?,
    cs_ext_tax:                double?,
    cs_coupon_amt:             double?,
    cs_ext_ship_cost:          double?,
    cs_net_paid:               double?,
    cs_net_paid_inc_tax:       double?,
    cs_net_paid_inc_ship:      double?,
    cs_net_paid_inc_ship_tax:  double?,
    cs_net_profit:             double?
}

create type tpcds.catalog_returns_type as closed {
    cr_returned_date_sk:       bigint?,
    cr_returned_time_sk:       bigint?,
    cr_item_sk:                bigint,
    cr_refunded_customer_sk:   bigint?,
    cr_refunded_cdemo_sk:      bigint?,
    cr_refunded_hdemo_sk:      bigint?,
    cr_refunded_addr_sk:       bigint?,
    cr_returning_customer_sk:  bigint?,
    cr_returning_cdemo_sk:     bigint?,
    cr_returning_hdemo_sk:     bigint?,
    cr_returning_addr_sk:      bigint?,
    cr_call_center_sk:         bigint?,
    cr_catalog_page_sk:        bigint?,
    cr_ship_mode_sk:           bigint?,
    cr_warehouse_sk:           bigint?,
    cr_reason_sk:              bigint?,
    cr_order_number:           bigint,
    cr_return_quantity:        bigint?,
    cr_return_amount:          double?,
    cr_return_tax:             double?,
    cr_return_amt_inc_tax:     double?,
    cr_fee:                    double?,
    cr_return_ship_cost:       double?,
    cr_refunded_cash:          double?,
    cr_reversed_charge:        double?,
    cr_store_credit:           double?,
    cr_net_loss:               double?
}
create type tpcds.inventory_type as
 closed {
  inv_date_sk : bigint,
  inv_item_sk : bigint,
  inv_warehouse_sk : bigint,
  inv_quantity_on_hand : bigint?
}
create dataset inventory (inventory_type) primary key inv_date_sk, inv_item_sk, inv_warehouse_sk;
create dataset catalog_sales (catalog_sales_type)
primary key cs_item_sk, cs_order_number;

create dataset catalog_returns (catalog_returns_type)
primary key cr_item_sk, cr_order_number;


